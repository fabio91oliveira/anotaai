buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath Deps.tools_android_gradle_plugin
        classpath Deps.tools_kotlin_plugin
        classpath Deps.google_services
        classpath Deps.firebase_crashlytics_gradle
    }
}

allprojects {
    repositories {
        maven { url Repo.jitpack }
        jcenter()
        google()
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.plugins.findPlugin('android') ?: project.plugins.findPlugin('android-library')) {
            android {
                buildToolsVersion Config.buildTools
                compileSdkVersion Config.compileSdk

                defaultConfig {
                    minSdkVersion Config.minSdk
                    targetSdkVersion Config.targetSdk
                    testInstrumentationRunner Config.runner
                    versionCode Config.versionCode
                    versionName Config.versionName
                    multiDexEnabled true
                }

                testOptions {
                    execution Config.orchestrator
                    animationsDisabled = true
                }

                if (project.plugins.findPlugin('kotlin-android-extensions')) {
                    androidExtensions {
                        experimental = true
                    }
                }
                sourceSets {
                    main.java.srcDirs += Config.srcDirMain
                    test.java.srcDirs += Config.srcDirTest
                    androidTest.java.srcDirs += Config.srcDirAndroidTest
                }
                compileOptions {
                    sourceCompatibility Config.javaVersion
                    targetCompatibility Config.javaVersion

                    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
                        kotlinOptions {
                            jvmTarget = "1.8"
                        }
                    }
                }
            }
            dependencies {
                api fileTree(dir: 'libs', include: ['*.jar'])
                api Deps.kotlin_stdlib
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}
